x-app: &default-app
  build:
    context: "."
    args:
      UID: "${UID:-1000}"
      GID: "${GID:-1000}"
      UV_INSTALL_DEV: "${UV_INSTALL_DEV:-false}"
      DJANGO_DEBUG: "${DJANGO_DEBUG:-false}"
  depends_on:
    db:
      condition: service_healthy
  restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
  stop_grace_period: "3s"
  tty: true
  volumes:
    - "./src:/app/src:z"
  develop:
    watch:
        - action: rebuild
          path: ./pyproject.toml
        - action: rebuild
          path: ./uv.lock
  env_file:
    - ".env"

services:
  app:
    <<: [*default-app]
    ports:
      - "8000:8000"
    command: ["/app/scripts/django"]
    healthcheck:
      test: "${DOCKER_APP_HEALTHCHECK_TEST:-curl localhost:8000/health}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    
  
  db:
    image: postgres:16-alpine
    env_file:
      - ".env"
    ports:
      - "5432:5432"
    volumes:
      - "db:/var/lib/postgresql/data"
    restart: unless-stopped
    stop_grace_period: "3s"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 5

volumes:
  db: {}